[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Scan",
  "enabled": 1,
  "modified": "2025-01-25 20:51:11.940564",
  "module": "Upande Tambuzi",
  "name": "Scan QR Button",
  "script": "frappe.ui.form.on('Scan', {\n    refresh(frm) {\n        frm.add_custom_button(\"Scan QR Code\", () => {\n            \n            const scanLocation = cur_frm.doc.scan_location;\n                        \n            if (!scanLocation) {\n                frappe.throw(\"Scan location is missing. Please select it before scanning.\");\n                return;\n            }\n            \n            if (!window.Html5Qrcode) {\n                const script = document.createElement(\"script\");\n                script.src = \"https://unpkg.com/html5-qrcode\";\n                script.onload = () => {\n                    console.log(\"Html5Qrcode library loaded successfully.\");\n                    showQrScannerDialog();\n                };\n                script.onerror = () => {\n                    console.error(\"Failed to load Html5Qrcode library.\");\n                    frappe.msgprint(\"Failed to load QR scanning library. Please check your network connection.\");\n                };\n                document.head.appendChild(script);\n            } else {\n                showQrScannerDialog();\n            }\n            \n            \n            \n            function showQrScannerDialog() {\n                const dialog = new frappe.ui.Dialog({\n                    title: \"Scan QR Code\",\n                    fields: [\n                        { fieldname: 'qr_scanner', fieldtype: 'HTML', options: '' }\n                    ]\n                });\n\n                const $wrapper = dialog.fields_dict.qr_scanner.$wrapper;\n                $wrapper.html('<div id=\"qr-reader\" style=\"width: 100%;\"></div>');\n\n                dialog.show();\n\n                setTimeout(() => {\n                    const qrReaderElement = document.getElementById(\"qr-reader\");\n                    if (qrReaderElement) {\n                        initializeQrScanner(qrReaderElement, dialog);\n                    } else {\n                        console.error(\"QR Reader element not found!\");\n                        frappe.msgprint(\"Error initializing QR scanner. Please try again.\");\n                    }\n                }, 300);\n            }\n            \n            \n            \n            \n            \n            \n            function initializeQrScanner(qrReaderElement, dialog) {\n                const html5QrCode = new Html5Qrcode(\"qr-reader\");\n\n                html5QrCode.start(\n                    { facingMode: \"environment\" }, \n                    {\n                        fps: 10, \n                        qrbox: { width: 250, height: 250 } \n                    },\n                    (decodedText, decodedResult) => {\n                        createStockEntry(decodedText, scanLocation);\n                        frappe.msgprint(`${decodedText}`);\n                        html5QrCode.stop();\n                        dialog.hide();\n                        \n                        \n                    },\n                    (errorMessage) => {\n                        console.warn(\"Scanning error:\", errorMessage);\n                    }\n                ).catch((err) => {\n                    console.error(\"Error starting QR scanner:\", err);\n                    frappe.msgprint(\"Unable to access the camera. Please ensure permissions are granted and try again.\");\n                });\n\n                dialog.on(\"hide\", function () {\n                    html5QrCode.stop().then(() => {\n                        console.log(\"QR Scanner stopped.\");\n                    }).catch((err) => {\n                        console.error(\"Error stopping QR scanner:\", err);\n                    });\n                });\n            }\n            \n            function createStockEntry(decodedText, scanLocation) {\n                const details = {};\n                decodedText.split(\"\\n\").forEach((line) => {\n                    const [key, value] = line.split(\":\").map((part) => part.trim());\n                    if (key && value) details[key] = value;\n                });\n                \n                const source_warehouse = details[\"Source Warehouse\"];\n                const variety = details.Variety;\n                const qty = parseInt(details[\"Number of Stems\"], 10);\n                const breeder = details.Breeder;\n                const grower = details.Grower;\n                const stock_entry_type = source_warehouse ? \"Material Transfer\" : \"Material Receipt\";\n\n                \n                const locationMapping = {\n                    \"Burguret Receiving Area\": { source: null, target: \"Burguret Received Store - TL\" },\n                    \"Burguret Grading Area\": { source: \"Burguret Received Store - TL\", target: \"Burguret General Store - TL\" },\n                    // \"Burguret Packaging Area\": { source: \"Burguret - Grading\", target: \"Burguret - Packaging\" },\n                    \"Turaco Receiving Area\": { source: null, target: \"Turaco Received Store - TL\" },\n                    \"Turaco Grading Area\": { source: \"Turaco Received Store - TL\", target: \"Turaco General Store - TL\" },\n                    // \"Turaco Packaging Area\": { source: \"Turaco - Grading\", target: \"Turaco - Packaging\" },\n                    \"Pendekeza Receiving Area\": { source: null, target: \"Pendekeza Received Store - TL\" },\n                    \"Pendekeza Grading Area\": { source: \"Pendekeza Received Store - TL\", target: \"Pendekeza General Store - TL\" },\n                    // \"Pendekeza Packaging Area\": { source: \"Pendekeza - Grading\", target: \"Pendekeza - Packaging\" }\n                };\n                \n                const locationData = locationMapping[scanLocation];\n\n                if (!locationData) {\n                    frappe.msgprint(`Invalid scan location: ${scanLocation}`);\n                    return;\n                }\n                stock_entry_data = {\n                    \"location data\": locationData,\n                    \"source warehouse\": source_warehouse,\n                    \"variety\": variety,\n                    \"quantity\": qty,\n                    \"breeder\": breeder,\n                    \"grower\": grower,\n                    \"stock entry type\": stock_entry_type\n                };\n            \n                \n                \n                const created_stock_entry = frappe.call({\n                    method: \"upande_tambuzi.server_scripts.create_stock_entry.create_stock_entry\",\n                    args: {\n                        stock_entry_data: JSON.stringify(stock_entry_data),\n                    },\n                });\n            }\n            \n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2025-01-25 20:29:13.185615",
  "module": "Upande Tambuzi",
  "name": "Populate Number of Items",
  "script": "frappe.ui.form.on('Stock Entry', {\n    refresh: function(frm){\n        $.each(frm.doc.items, function(i, row){\n            if (row.uom == 'Stems') {\n                row.custom_number_of_stems = row.qty;\n            }\n        });\n    }\n});",
  "view": "Form"
 }
]